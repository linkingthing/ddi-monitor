// Code generated by protoc-gen-go. DO NOT EDIT.
// source: monitor.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RegisterReq struct {
	IP                   string   `protobuf:"bytes,1,opt,name=iP,proto3" json:"iP,omitempty"`
	HostName             string   `protobuf:"bytes,2,opt,name=hostName,proto3" json:"hostName,omitempty"`
	Roles                []string `protobuf:"bytes,3,rep,name=roles,proto3" json:"roles,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterReq) Reset()         { *m = RegisterReq{} }
func (m *RegisterReq) String() string { return proto.CompactTextString(m) }
func (*RegisterReq) ProtoMessage()    {}
func (*RegisterReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_44174b7b2a306b71, []int{0}
}

func (m *RegisterReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterReq.Unmarshal(m, b)
}
func (m *RegisterReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterReq.Marshal(b, m, deterministic)
}
func (m *RegisterReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterReq.Merge(m, src)
}
func (m *RegisterReq) XXX_Size() int {
	return xxx_messageInfo_RegisterReq.Size(m)
}
func (m *RegisterReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterReq.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterReq proto.InternalMessageInfo

func (m *RegisterReq) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

func (m *RegisterReq) GetHostName() string {
	if m != nil {
		return m.HostName
	}
	return ""
}

func (m *RegisterReq) GetRoles() []string {
	if m != nil {
		return m.Roles
	}
	return nil
}

type RegisterResp struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterResp) Reset()         { *m = RegisterResp{} }
func (m *RegisterResp) String() string { return proto.CompactTextString(m) }
func (*RegisterResp) ProtoMessage()    {}
func (*RegisterResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_44174b7b2a306b71, []int{1}
}

func (m *RegisterResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterResp.Unmarshal(m, b)
}
func (m *RegisterResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterResp.Marshal(b, m, deterministic)
}
func (m *RegisterResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterResp.Merge(m, src)
}
func (m *RegisterResp) XXX_Size() int {
	return xxx_messageInfo_RegisterResp.Size(m)
}
func (m *RegisterResp) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterResp.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterResp proto.InternalMessageInfo

func (m *RegisterResp) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *RegisterResp) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type KeepAliveReq struct {
	IP                   string   `protobuf:"bytes,1,opt,name=iP,proto3" json:"iP,omitempty"`
	Roles                []string `protobuf:"bytes,2,rep,name=roles,proto3" json:"roles,omitempty"`
	CpuUsage             string   `protobuf:"bytes,3,opt,name=cpuUsage,proto3" json:"cpuUsage,omitempty"`
	MemUsage             string   `protobuf:"bytes,4,opt,name=memUsage,proto3" json:"memUsage,omitempty"`
	DnsAlive             bool     `protobuf:"varint,5,opt,name=dnsAlive,proto3" json:"dnsAlive,omitempty"`
	DhcpAlive            bool     `protobuf:"varint,6,opt,name=dhcpAlive,proto3" json:"dhcpAlive,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeepAliveReq) Reset()         { *m = KeepAliveReq{} }
func (m *KeepAliveReq) String() string { return proto.CompactTextString(m) }
func (*KeepAliveReq) ProtoMessage()    {}
func (*KeepAliveReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_44174b7b2a306b71, []int{2}
}

func (m *KeepAliveReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeepAliveReq.Unmarshal(m, b)
}
func (m *KeepAliveReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeepAliveReq.Marshal(b, m, deterministic)
}
func (m *KeepAliveReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeepAliveReq.Merge(m, src)
}
func (m *KeepAliveReq) XXX_Size() int {
	return xxx_messageInfo_KeepAliveReq.Size(m)
}
func (m *KeepAliveReq) XXX_DiscardUnknown() {
	xxx_messageInfo_KeepAliveReq.DiscardUnknown(m)
}

var xxx_messageInfo_KeepAliveReq proto.InternalMessageInfo

func (m *KeepAliveReq) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

func (m *KeepAliveReq) GetRoles() []string {
	if m != nil {
		return m.Roles
	}
	return nil
}

func (m *KeepAliveReq) GetCpuUsage() string {
	if m != nil {
		return m.CpuUsage
	}
	return ""
}

func (m *KeepAliveReq) GetMemUsage() string {
	if m != nil {
		return m.MemUsage
	}
	return ""
}

func (m *KeepAliveReq) GetDnsAlive() bool {
	if m != nil {
		return m.DnsAlive
	}
	return false
}

func (m *KeepAliveReq) GetDhcpAlive() bool {
	if m != nil {
		return m.DhcpAlive
	}
	return false
}

type KeepAliveResp struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeepAliveResp) Reset()         { *m = KeepAliveResp{} }
func (m *KeepAliveResp) String() string { return proto.CompactTextString(m) }
func (*KeepAliveResp) ProtoMessage()    {}
func (*KeepAliveResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_44174b7b2a306b71, []int{3}
}

func (m *KeepAliveResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeepAliveResp.Unmarshal(m, b)
}
func (m *KeepAliveResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeepAliveResp.Marshal(b, m, deterministic)
}
func (m *KeepAliveResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeepAliveResp.Merge(m, src)
}
func (m *KeepAliveResp) XXX_Size() int {
	return xxx_messageInfo_KeepAliveResp.Size(m)
}
func (m *KeepAliveResp) XXX_DiscardUnknown() {
	xxx_messageInfo_KeepAliveResp.DiscardUnknown(m)
}

var xxx_messageInfo_KeepAliveResp proto.InternalMessageInfo

func (m *KeepAliveResp) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *KeepAliveResp) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*RegisterReq)(nil), "proto.RegisterReq")
	proto.RegisterType((*RegisterResp)(nil), "proto.RegisterResp")
	proto.RegisterType((*KeepAliveReq)(nil), "proto.KeepAliveReq")
	proto.RegisterType((*KeepAliveResp)(nil), "proto.KeepAliveResp")
}

func init() { proto.RegisterFile("monitor.proto", fileDescriptor_44174b7b2a306b71) }

var fileDescriptor_44174b7b2a306b71 = []byte{
	// 284 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x91, 0xc1, 0x4e, 0x83, 0x40,
	0x10, 0x86, 0x05, 0xa4, 0xc2, 0xd8, 0x36, 0x66, 0xec, 0x61, 0x43, 0x3c, 0x34, 0x9c, 0x7a, 0xea,
	0x41, 0x63, 0x62, 0xf4, 0xe4, 0xd9, 0x54, 0x1b, 0x12, 0x1f, 0x00, 0xe9, 0x84, 0x92, 0x14, 0x16,
	0x77, 0xa8, 0x77, 0x5f, 0xc6, 0xe7, 0x34, 0xbb, 0xeb, 0x52, 0x92, 0x7a, 0xe9, 0x09, 0xfe, 0xff,
	0xdf, 0x9d, 0xf9, 0x76, 0x06, 0x26, 0xb5, 0x6c, 0xaa, 0x4e, 0xaa, 0x65, 0xab, 0x64, 0x27, 0x31,
	0x34, 0x9f, 0xf4, 0x0d, 0x2e, 0x33, 0x2a, 0x2b, 0xee, 0x48, 0x65, 0xf4, 0x89, 0x53, 0xf0, 0xab,
	0xb5, 0xf0, 0xe6, 0xde, 0x22, 0xce, 0xfc, 0x6a, 0x8d, 0x09, 0x44, 0x5b, 0xc9, 0xdd, 0x6b, 0x5e,
	0x93, 0xf0, 0x8d, 0xdb, 0x6b, 0x9c, 0x41, 0xa8, 0xe4, 0x8e, 0x58, 0x04, 0xf3, 0x60, 0x11, 0x67,
	0x56, 0xa4, 0x8f, 0x30, 0x3e, 0x14, 0xe4, 0x16, 0x05, 0x5c, 0xf0, 0xbe, 0x28, 0x88, 0xd9, 0x94,
	0x8d, 0x32, 0x27, 0xf1, 0x0a, 0x82, 0x9a, 0xcb, 0xbf, 0xb2, 0xfa, 0x37, 0xfd, 0xf1, 0x60, 0xfc,
	0x42, 0xd4, 0x3e, 0xef, 0xaa, 0x2f, 0xfa, 0x0f, 0xa7, 0x6f, 0xe9, 0x0f, 0x5a, 0x6a, 0xc8, 0xa2,
	0xdd, 0xbf, 0x73, 0x5e, 0x92, 0x08, 0x2c, 0xa4, 0xd3, 0x3a, 0xab, 0xa9, 0xb6, 0xd9, 0xb9, 0xcd,
	0x9c, 0xd6, 0xd9, 0xa6, 0x61, 0xd3, 0x4c, 0x84, 0x86, 0xad, 0xd7, 0x78, 0x03, 0xf1, 0x66, 0x5b,
	0x58, 0x12, 0x31, 0x32, 0xe1, 0xc1, 0x48, 0x9f, 0x60, 0x32, 0xe0, 0x3c, 0xed, 0x95, 0xb7, 0xdf,
	0x1e, 0x4c, 0x57, 0x76, 0x17, 0xab, 0xbc, 0xc9, 0x4b, 0x52, 0x78, 0x0f, 0x91, 0x1b, 0x1a, 0xa2,
	0x5d, 0xd0, 0x72, 0xb0, 0x96, 0xe4, 0xfa, 0xc8, 0xe3, 0x36, 0x3d, 0xc3, 0x07, 0x88, 0x7b, 0x0c,
	0x74, 0x67, 0x86, 0x03, 0x4c, 0x66, 0xc7, 0xa6, 0xbe, 0xf9, 0x31, 0x32, 0xf6, 0xdd, 0x6f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xd9, 0xaf, 0xa9, 0x5d, 0x15, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MonitorManagerClient is the client API for MonitorManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MonitorManagerClient interface {
	Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterResp, error)
	KeepAlive(ctx context.Context, in *KeepAliveReq, opts ...grpc.CallOption) (*KeepAliveResp, error)
}

type monitorManagerClient struct {
	cc *grpc.ClientConn
}

func NewMonitorManagerClient(cc *grpc.ClientConn) MonitorManagerClient {
	return &monitorManagerClient{cc}
}

func (c *monitorManagerClient) Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterResp, error) {
	out := new(RegisterResp)
	err := c.cc.Invoke(ctx, "/proto.MonitorManager/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *monitorManagerClient) KeepAlive(ctx context.Context, in *KeepAliveReq, opts ...grpc.CallOption) (*KeepAliveResp, error) {
	out := new(KeepAliveResp)
	err := c.cc.Invoke(ctx, "/proto.MonitorManager/KeepAlive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MonitorManagerServer is the server API for MonitorManager service.
type MonitorManagerServer interface {
	Register(context.Context, *RegisterReq) (*RegisterResp, error)
	KeepAlive(context.Context, *KeepAliveReq) (*KeepAliveResp, error)
}

// UnimplementedMonitorManagerServer can be embedded to have forward compatible implementations.
type UnimplementedMonitorManagerServer struct {
}

func (*UnimplementedMonitorManagerServer) Register(ctx context.Context, req *RegisterReq) (*RegisterResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Register not implemented")
}
func (*UnimplementedMonitorManagerServer) KeepAlive(ctx context.Context, req *KeepAliveReq) (*KeepAliveResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KeepAlive not implemented")
}

func RegisterMonitorManagerServer(s *grpc.Server, srv MonitorManagerServer) {
	s.RegisterService(&_MonitorManager_serviceDesc, srv)
}

func _MonitorManager_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MonitorManagerServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.MonitorManager/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MonitorManagerServer).Register(ctx, req.(*RegisterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _MonitorManager_KeepAlive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeepAliveReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MonitorManagerServer).KeepAlive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.MonitorManager/KeepAlive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MonitorManagerServer).KeepAlive(ctx, req.(*KeepAliveReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _MonitorManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.MonitorManager",
	HandlerType: (*MonitorManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Register",
			Handler:    _MonitorManager_Register_Handler,
		},
		{
			MethodName: "KeepAlive",
			Handler:    _MonitorManager_KeepAlive_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "monitor.proto",
}
